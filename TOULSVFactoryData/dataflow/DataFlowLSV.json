{
	"name": "DataFlowLSV",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "LPSourceCSV",
						"type": "DatasetReference"
					},
					"name": "LSVSource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "LPSinkCSV",
						"type": "DatasetReference"
					},
					"name": "LpSink"
				}
			],
			"transformations": [
				{
					"name": "LPAggregate"
				}
			],
			"script": "\n\nsource(output(\n\t\t{MeterPoint Code} as string,\n\t\t{Serial Number} as string,\n\t\t{Plant Code} as string,\n\t\t{Date/Time} as string,\n\t\t{Data Type} as string,\n\t\t{Data Value} as double,\n\t\tUnits as string,\n\t\tStatus as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpurgeFiles: true,\n\twildcardPaths:['LP*.csv']) ~> LSVSource\nLSVSource aggregate(groupBy({Data Type},\n\t\t{MeterPoint Code}),\n\t{Average Value} = avg({Data Value})) ~> LPAggregate\nLPAggregate sink(input(\n\t\tColumn_1 as string,\n\t\tColumn_2 as string,\n\t\tColumn_3 as string,\n\t\tColumn_4 as string,\n\t\tColumn_5 as string,\n\t\tColumn_6 as string,\n\t\tColumn_7 as string,\n\t\tColumn_8 as string,\n\t\tColumn_9 as string,\n\t\tColumn_10 as string,\n\t\tColumn_11 as string,\n\t\tColumn_12 as string,\n\t\tColumn_13 as string,\n\t\tColumn_14 as string,\n\t\tColumn_15 as string,\n\t\tColumn_16 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tmapColumn(\n\t\teach(match(name == 'Average Value')),\n\t\teach(match(name == 'MeterPoint Code'),\n\t\t\t'Meter' = $$)\n\t)) ~> LpSink"
		}
	}
}